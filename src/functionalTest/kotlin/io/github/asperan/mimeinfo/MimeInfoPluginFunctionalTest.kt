/*
Copyright (c) 2022, Alex Speranza

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package io.github.asperan.mimeinfo

import io.kotest.core.spec.style.FunSpec
import io.kotest.matchers.booleans.shouldBeTrue
import org.gradle.internal.impldep.org.junit.Rule
import org.gradle.internal.impldep.org.junit.rules.TemporaryFolder
import org.gradle.testkit.runner.GradleRunner

/**
 * A simple functional test for the 'io.github.asperan.mimeinfo.greeting' plugin.
 */
class MimeinfoPluginFunctionalTest : FunSpec() {
    @get:Rule
    val tempFolder = TemporaryFolder()

    private fun getProjectDir() = tempFolder.root
    private fun getBuildFile() = getProjectDir().resolve("build.gradle")
    private fun getSettingsFile() = getProjectDir().resolve("settings.gradle")

    init {
        test("can run task") {
            // Setup the test build
            getSettingsFile().writeText("")
            getBuildFile().writeText("""
                plugins {
                    id('io.github.asperan.mimeinfo.greeting')
                }
                """.trimIndent())

            // Run the build
            val runner = GradleRunner.create()
            runner.forwardOutput()
            runner.withPluginClasspath()
            runner.withArguments("greeting")
            runner.withProjectDir(getProjectDir())
            val result = runner.build();

            // Verify the result
            result.output.contains("Hello from plugin 'io.github.asperan.mimeinfo.greeting'").shouldBeTrue()
        }
    }

}
